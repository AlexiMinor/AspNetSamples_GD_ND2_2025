// <auto-generated />
#nullable enable
namespace AspNetSamples.Mappers
{
    public partial class ArticleMapper
    {
        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.2.1.0")]
        public partial global::AspNetSamples.Core.Dto.ArticleDto MapArticleToArticleDto(global::AspNetSamples.Database.Entities.Article article)
        {
            var target = new global::AspNetSamples.Core.Dto.ArticleDto();
            target.Id = article.Id;
            target.Title = article.Title;
            target.Description = article.Description;
            if (article.Content != null)
            {
                target.Content = article.Content;
            }
            if (article.Source != null)
            {
                target.SourceName = article.Source.Name;
                target.SourceDto = MapToSourceDto(article.Source);
            }
            else
            {
                target.SourceDto = null;
            }
            target.OriginUrl = article.OriginUrl;
            target.SourceId = article.SourceId;
            target.Rate = article.Rate;
            target.CreatedAt = article.CreatedAt;
            return target;
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.2.1.0")]
        public partial global::AspNetSamples.Database.Entities.Article MapArticleDtoToArticle(global::AspNetSamples.Core.Dto.ArticleDto dto)
        {
            var target = new global::AspNetSamples.Database.Entities.Article();
            target.Id = dto.Id;
            target.Title = dto.Title;
            target.Description = dto.Description;
            target.Content = dto.Content;
            target.OriginUrl = dto.OriginUrl;
            target.CreatedAt = dto.CreatedAt;
            target.Rate = dto.Rate;
            target.SourceId = dto.SourceId;
            return target;
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.2.1.0")]
        public partial global::AspNetSamples.Core.Dto.ArticleDto MapCreateArticleModelToArticleDto(global::AspNetSamples.Models.CreateArticleModel model)
        {
            var target = new global::AspNetSamples.Core.Dto.ArticleDto();
            target.Title = model.Title;
            target.Description = model.Description;
            target.Content = model.Text;
            target.SourceId = model.SourceId;
            return target;
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.2.1.0")]
        public partial global::AspNetSamples.Models.EditArticleModel MapArticleDtoToEditModel(global::AspNetSamples.Core.Dto.ArticleDto dto)
        {
            var target = new global::AspNetSamples.Models.EditArticleModel();
            target.Id = dto.Id;
            target.Title = dto.Title;
            target.Description = dto.Description;
            target.Text = dto.Content;
            target.SourceId = dto.SourceId;
            return target;
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.2.1.0")]
        public partial global::AspNetSamples.Core.Dto.ArticleDto MapEditArticleModelToArticleDto(global::AspNetSamples.Models.EditArticleModel model)
        {
            var target = new global::AspNetSamples.Core.Dto.ArticleDto();
            target.Id = model.Id;
            target.Title = model.Title;
            target.Description = model.Description;
            target.Content = model.Text;
            target.SourceId = model.SourceId;
            return target;
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.2.1.0")]
        public partial global::AspNetSamples.Core.Dto.ArticleDto MapOnlinerSyndicationItemToArticleDto(global::System.ServiceModel.Syndication.SyndicationItem item, global::System.Guid id, global::System.Guid sourceId)
        {
            var target = new global::AspNetSamples.Core.Dto.ArticleDto();
            target.Id = id;
            if (item.Title?.Text != null)
            {
                target.Title = item.Title.Text;
            }
            if (item.Summary?.Text != null)
            {
                target.Description = item.Summary.Text;
            }
            if (item.Content != null)
            {
                target.Content = item.Content.ToString();
            }
            if (item.Id != null)
            {
                target.OriginUrl = item.Id;
            }
            target.SourceId = sourceId;
            target.CreatedAt = item.PublishDate.DateTime;
            return target;
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.2.1.0")]
        private global::AspNetSamples.Core.Dto.SourceDto MapToSourceDto(global::AspNetSamples.Database.Entities.Source source)
        {
            var target = new global::AspNetSamples.Core.Dto.SourceDto();
            target.Id = source.Id;
            target.Name = source.Name;
            target.DomainName = source.DomainName;
            if (source.RssLink != null)
            {
                target.RssLink = source.RssLink;
            }
            return target;
        }
    }
}