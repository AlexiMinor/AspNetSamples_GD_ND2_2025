// <auto-generated />
#nullable enable
namespace AspNetSamples.Mappers
{
    public partial class UserMapper
    {
        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.2.1.0")]
        [return: global::System.Diagnostics.CodeAnalysis.NotNullIfNotNull(nameof(user))]
        public partial global::AspNetSamples.Core.Dto.UserDto? MapUserToUserDto(global::AspNetSamples.Database.Entities.User? user)
        {
            if (user == null)
                return default;
            var target = new global::AspNetSamples.Core.Dto.UserDto();
            target.Id = user.Id;
            target.Email = user.Email;
            target.Name = user.Name;
            target.Salt = user.Salt;
            target.PasswordHash = user.PasswordHash;
            target.LastLogin = user.LastLogin;
            target.FailedLoginAttempts = user.FailedLoginAttempts;
            target.RoleId = user.RoleId;
            target.Role = MapToRoleDto(user.Role);
            return target;
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.2.1.0")]
        public partial global::AspNetSamples.Core.Dto.UserDto RegisterModelToUserDto(global::AspNetSamples.Models.RegisterModel article)
        {
            var target = new global::AspNetSamples.Core.Dto.UserDto();
            target.Email = article.Email;
            target.Password = article.Password;
            return target;
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.2.1.0")]
        public partial global::AspNetSamples.Database.Entities.User MapUserDtoToUser(global::AspNetSamples.Core.Dto.UserDto commandUser)
        {
            var target = new global::AspNetSamples.Database.Entities.User();
            target.Id = commandUser.Id;
            target.Email = commandUser.Email;
            target.Name = commandUser.Name;
            target.PasswordHash = commandUser.PasswordHash;
            target.Salt = commandUser.Salt;
            target.LastLogin = commandUser.LastLogin;
            target.FailedLoginAttempts = commandUser.FailedLoginAttempts;
            target.RoleId = commandUser.RoleId;
            if (commandUser.Role != null)
            {
                target.Role = MapToRole(commandUser.Role);
            }
            return target;
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.2.1.0")]
        private global::AspNetSamples.Core.Dto.RoleDto MapToRoleDto(global::AspNetSamples.Database.Entities.Role source)
        {
            var target = new global::AspNetSamples.Core.Dto.RoleDto();
            target.Id = source.Id;
            target.Name = source.Name;
            return target;
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "4.2.1.0")]
        private global::AspNetSamples.Database.Entities.Role MapToRole(global::AspNetSamples.Core.Dto.RoleDto source)
        {
            var target = new global::AspNetSamples.Database.Entities.Role();
            target.Id = source.Id;
            target.Name = source.Name;
            return target;
        }
    }
}